{"version":3,"sources":["services/logService.js","services/httpService.js","services/movieService.js","services/genreService.js","components/common/pagination.jsx","components/common/like.jsx","services/authService.js","components/common/tableHeader.jsx","components/common/tableBody.jsx","components/common/table.jsx","components/moviesTable.jsx","utils/pagination.js","components/common/listGroup.jsx","components/searchBox.jsx","components/movies.jsx","components/navBar.jsx","components/cutomers.jsx","components/rentals.jsx","components/notFound.jsx","components/common/input.jsx","components/common/select.jsx","components/common/form.jsx","components/movieForm.jsx","components/loginForm.jsx","services/userService.js","components/registerForm.jsx","components/logout.jsx","components/common/protectedRoute.jsx","App.js","serviceWorker.js","index.js"],"names":["init","log","error","console","axios","defaults","baseURL","process","interceptors","response","use","status","logger","toast","Promise","reject","get","post","put","delete","setJwt","jwt","headers","common","deleteMovie","movieId","http","saveMovie","movie","_id","modifiedMovie","getGenres","Pagination","props","itemsPerPage","pageSize","totalPages","Math","ceil","count","pages","_","range","className","map","i","key","currentPage","onClick","ChangePage","Like","liked","classes","style","cursor","aria-hidden","login","user","a","body","email","username","password","data","localStorage","setItem","loginWithJwt","token","getCurrentUser","getItem","jwtDecode","TableHeader","renderSortIcon","column","col","sortColumn","content","order","this","onSort","columns","raiseSort","label","Component","TableBody","renderCell","item","Table","MoviesTable","to","title","onLike","deleteColumn","onDelete","isAdmin","push","movies","pagination","items","start","slice","take","value","ListGroup","onChange","textProperty","valueProperty","selectedItem","defaultProps","SearchBox","type","name","placeholder","e","currentTarget","Movies","state","searchQuery","genres","handleDelete","movieToRemove","originalMovies","setState","filter","handlePage","handleSort","handleLike","index","indexOf","handleChange","genre","selectedGenre","handleSearch","query","getPagedData","allMovies","filtered","m","toLowerCase","startsWith","orderBy","totalCount","length","genreData","moviesData","marginBottom","SearchQuery","NavBar","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","Fragment","Customers","Rentals","Notfound","Input","rest","htmlFor","Select","options","option","Form","errors","validate","Joi","schema","abortEarly","details","path","message","validateProperty","obj","handleSubmit","preventDefault","doSubmit","input","errorMessage","disabled","MovieForm","genreId","numberInStock","dailyRentalRate","string","required","number","min","max","history","replace","genresData","match","params","onSubmit","renderInput","renderSelect","renderButton","LoginForm","location","window","from","pathname","register","RegisterForm","info","Logout","removeItem","ProtectedRoute","component","render","App","exact","Boolean","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.57581ade.chunk.js","sourcesContent":["function init() {}\r\n\r\nfunction log(error) {\r\n  console.log(error);\r\n}\r\n\r\nexport default {\r\n  init,\r\n  log,\r\n};\r\n","import axios from \"axios\";\r\nimport logger from \"./logService\";\r\nimport { toast } from \"react-toastify\";\r\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\r\naxios.interceptors.response.use(null, (error) => {\r\n  const expectedError =\r\n    error.response &&\r\n    error.response.status >= 400 &&\r\n    error.response.status < 500;\r\n\r\n  if (!expectedError) {\r\n    logger.log(error);\r\n    toast.error(\"An unexpected error occurrred.\");\r\n  }\r\n  return Promise.reject(error);\r\n});\r\nexport function setJwt(jwt) {\r\n  axios.defaults.headers.common[\"x-auth-token\"] = jwt;\r\n}\r\n\r\nexport default {\r\n  get: axios.get,\r\n  post: axios.post,\r\n  put: axios.put,\r\n  delete: axios.delete,\r\n  setJwt,\r\n};\r\n","import http from \"./httpService\";\r\nexport function getMovies() {\r\n  return http.get(\"/movies\");\r\n}\r\nexport function getMovie(movieId) {\r\n  return http.get(\"/movies/\" + movieId);\r\n}\r\nexport function deleteMovie(movieId) {\r\n  return http.delete(\"/movies/\" + movieId);\r\n}\r\nexport function saveMovie(movie) {\r\n  if (movie._id) {\r\n    const modifiedMovie = { ...movie };\r\n    delete modifiedMovie[\"_id\"];\r\n    return http.put(\"/movies/\" + movie._id, modifiedMovie);\r\n  } else {\r\n    return http.post(\"/movies\", movie);\r\n  }\r\n}\r\n","import http from \"./httpService\";\r\n\r\nexport function getGenres() {\r\n  return http.get(\"/genres\");\r\n}\r\n","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React from \"react\";\r\nimport _ from \"lodash\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport { number, func } from \"prop-types\";\r\nconst Pagination = (props) => {\r\n  const itemsPerPage = props.pageSize;\r\n  const totalPages = Math.ceil(props.count / itemsPerPage);\r\n  const pages = _.range(1, totalPages + 1);\r\n  if (totalPages <= 1) return null;\r\n  return (\r\n    <ul className=\"pagination\">\r\n      {pages.map((i) => {\r\n        return (\r\n          <li\r\n            key={i}\r\n            className={\r\n              i === props.currentPage ? \"page-item active\" : \"page-item \"\r\n            }\r\n          >\r\n            <a onClick={() => props.ChangePage(i)} className=\"page-link\">\r\n              {i}\r\n            </a>\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\nPagination.propTypes = {\r\n  count: number.isRequired,\r\n  currentPage: number.isRequired,\r\n  pageSize: number.isRequired,\r\n  ChangePage: func.isRequired,\r\n};\r\nexport default Pagination;\r\n","import React from \"react\";\r\nconst Like = (props) => {\r\n  const classes = \" fa fa-heart\";\r\n  return (\r\n    <i\r\n      className={props.liked === true ? classes : classes + \"-o\"}\r\n      onClick={props.onClick}\r\n      style={{ cursor: \"pointer\" }}\r\n      aria-hidden=\"true\"\r\n    ></i>\r\n  );\r\n};\r\n\r\nexport default Like;\r\n","import http from \"./httpService\";\r\nimport jwtDecode from \"jwt-decode\";\r\nhttp.setJwt(getJwt());\r\nexport async function login(user) {\r\n  const body = {\r\n    email: user.username,\r\n    password: user.password,\r\n  };\r\n  const { data: jwt } = await http.post(\"/auth\", body);\r\n  localStorage.setItem(\"token\", jwt);\r\n}\r\nexport function getJwt() {\r\n  return localStorage.getItem(\"token\");\r\n}\r\nexport function loginWithJwt(token) {\r\n  localStorage.setItem(\"token\", token);\r\n}\r\nexport function logout() {\r\n  localStorage.removeItem(\"token\");\r\n}\r\nexport function getCurrentUser() {\r\n  try {\r\n    const jwt = localStorage.getItem(\"token\");\r\n    return jwtDecode(jwt);\r\n  } catch (error) {\r\n    return null;\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nclass TableHeader extends Component {\r\n  raiseSort(col) {\r\n    let sortColumn = { ...this.props.sortColumn };\r\n    if (sortColumn.col === col) {\r\n      sortColumn.order = sortColumn.order === \"asc\" ? \"desc\" : \"asc\";\r\n    } else {\r\n      sortColumn.col = col;\r\n      sortColumn.order = \"asc\";\r\n    }\r\n    this.props.onSort(sortColumn);\r\n  }\r\n  renderSortIcon = (column) => {\r\n    if (column.col !== this.props.sortColumn.col || column.content) return null;\r\n    if (this.props.sortColumn.order === \"asc\")\r\n      return <i className=\"fa fa-sort-asc m-2\"></i>;\r\n    return <i className=\"fa fa-sort-desc m-2\"></i>;\r\n  };\r\n  render() {\r\n    return (\r\n      <thead>\r\n        <tr>\r\n          {this.props.columns.map((column) => (\r\n            <th\r\n              className={column.col ? \"clickable\" : \"\"}\r\n              key={column.col || column.key}\r\n              onClick={() => this.raiseSort(column.col)}\r\n            >\r\n              {column.label}\r\n              {this.renderSortIcon(column)}\r\n            </th>\r\n          ))}\r\n        </tr>\r\n      </thead>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TableHeader;\r\n","import React, { Component } from \"react\";\r\nimport _ from \"lodash\";\r\nclass TableBody extends Component {\r\n  renderCell = (item, column) => {\r\n    if (column.content) return column.content(item);\r\n    return _.get(item, column.col);\r\n  };\r\n  render() {\r\n    const { data, columns } = this.props;\r\n    return (\r\n      <tbody>\r\n        {data.map((item) => (\r\n          <tr key={item._id}>\r\n            {columns.map((column) => (\r\n              <td key={item._id + (column.col || column.key)}>\r\n                {this.renderCell(item, column)}\r\n              </td>\r\n            ))}\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TableBody;\r\n","import React from \"react\";\r\nimport TableHeader from \"./tableHeader\";\r\nimport TableBody from \"./tableBody\";\r\nconst Table = (props) => {\r\n  const { data, columns, sortColumn, onSort } = props;\r\n  return (\r\n    <table className=\"table\">\r\n      <TableHeader columns={columns} sortColumn={sortColumn} onSort={onSort} />\r\n      <TableBody data={data} columns={columns} />\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n","import React, { Component } from \"react\";\r\nimport Like from \"./common/like\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getCurrentUser } from \"../services/authService\";\r\nimport Table from \"./common/table\";\r\nclass MoviesTable extends Component {\r\n  raiseSort(col) {\r\n    let sortColumn = { ...this.props.sortColumn };\r\n    if (sortColumn.col === col) {\r\n      sortColumn.order = sortColumn.order === \"asc\" ? \"desc\" : \"asc\";\r\n    } else {\r\n      sortColumn.col = col;\r\n      sortColumn.order = \"asc\";\r\n    }\r\n    this.props.onSort(sortColumn);\r\n  }\r\n  columns = [\r\n    {\r\n      col: \"title\",\r\n      label: \"Title\",\r\n      content: (movie) => (\r\n        <Link to={`/movies/${movie._id}`}>{movie.title}</Link>\r\n      ),\r\n    },\r\n    { col: \"genre.name\", label: \"Genre\" },\r\n    { col: \"numberInStock\", label: \"Stock\" },\r\n    { col: \"dailyRentalRate\", label: \"Cost\" },\r\n    {\r\n      key: \"like\",\r\n      content: (movie) => (\r\n        <Like liked={movie.liked} onClick={() => this.props.onLike(movie)} />\r\n      ),\r\n    },\r\n  ];\r\n  deleteColumn = {\r\n    key: \"delete\",\r\n    content: (movie) => (\r\n      <button\r\n        onClick={() => this.props.onDelete(movie)}\r\n        className=\"btn btn-primary btn-danger\"\r\n      >\r\n        Delete\r\n      </button>\r\n    ),\r\n  };\r\n\r\n  constructor() {\r\n    super();\r\n    const user = getCurrentUser();\r\n    if (user && user.isAdmin) this.columns.push(this.deleteColumn);\r\n  }\r\n  render() {\r\n    const { movies } = this.props;\r\n    return (\r\n      <Table\r\n        data={movies}\r\n        columns={this.columns}\r\n        sortColumn={this.props.sortColumn}\r\n        onSort={this.props.onSort}\r\n      />\r\n    );\r\n  }\r\n}\r\nexport default MoviesTable;\r\n","import _ from \"lodash\";\r\nexport function pagination(items, currentPage, pageSize) {\r\n  const start = (currentPage - 1) * pageSize;\r\n  return _(items).slice(start).take(pageSize).value();\r\n}\r\n","import React from \"react\";\r\nconst ListGroup = (props) => {\r\n  const { items, onChange, textProperty, valueProperty, selectedItem } = props;\r\n  return (\r\n    <ul className=\"list-group\">\r\n      {items.map((item) => (\r\n        <li\r\n          style={{ cursor: \"pointer\" }}\r\n          onClick={() => onChange(item)}\r\n          key={item[valueProperty]}\r\n          className={\r\n            selectedItem === item ? \"list-group-item active\" : \"list-group-item\"\r\n          }\r\n        >\r\n          {item[textProperty]}\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\nListGroup.defaultProps = {\r\n  textProperty: \"name\",\r\n  valueProperty: \"_id\",\r\n};\r\nexport default ListGroup;\r\n","import React from \"react\";\r\n\r\nconst SearchBox = ({ value, onChange }) => {\r\n  return (\r\n    <input\r\n      type=\"text\"\r\n      name=\"query\"\r\n      className=\"form-control my-3\"\r\n      placeholder=\"Search...\"\r\n      value={value}\r\n      onChange={(e) => onChange(e.currentTarget.value)}\r\n    />\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","import _ from \"lodash\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport React, { Component } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport { getMovies, deleteMovie } from \"../services/movieService\";\r\nimport { getGenres } from \"../services/genreService\";\r\nimport Pagination from \"./common/pagination\";\r\nimport MoviesTable from \"./moviesTable\";\r\nimport { pagination } from \"../utils/pagination\";\r\nimport ListGroup from \"./common/listGroup\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Searchbox from \"./searchBox\";\r\nclass Movies extends Component {\r\n  state = {\r\n    movies: [],\r\n    pageSize: 4,\r\n    currentPage: 1,\r\n    searchQuery: \"\",\r\n    genres: [],\r\n    sortColumn: { col: \"title\", order: \"asc\" },\r\n  };\r\n  async componentDidMount() {\r\n    const { data: genreData } = await getGenres();\r\n    const genres = [{ name: \"All Genres\", _id: \"\" }, ...genreData];\r\n    const { data: moviesData } = await getMovies();\r\n    this.setState({ movies: moviesData, genres });\r\n  }\r\n  handleDelete = async (movieToRemove) => {\r\n    const originalMovies = this.state.movies;\r\n    this.setState({\r\n      movies: originalMovies.filter((movie) => movie._id !== movieToRemove._id),\r\n    });\r\n    try {\r\n      await deleteMovie(movieToRemove._id);\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 404)\r\n        toast.error(\"Already deleted\");\r\n      this.setState({ movies: originalMovies });\r\n    }\r\n  };\r\n  handlePage = (i) => {\r\n    this.setState({ currentPage: i });\r\n  };\r\n\r\n  handleSort = (sortColumn) => {\r\n    this.setState({ sortColumn });\r\n  };\r\n\r\n  handleLike = (movie) => {\r\n    const movies = [...this.state.movies];\r\n    const index = movies.indexOf(movie);\r\n    movies[index] = { ...movie };\r\n    movies[index].liked = !movies[index].liked;\r\n    this.setState({ movies });\r\n  };\r\n  handleChange = (genre) => {\r\n    this.setState({ selectedGenre: genre, currentPage: 1 });\r\n  };\r\n  handleSearch = (query) => {\r\n    this.setState({ searchQuery: query, selectedGenre: null, currentPage: 1 });\r\n  };\r\n  getPagedData = () => {\r\n    const {\r\n      pageSize,\r\n      currentPage,\r\n      sortColumn,\r\n      selectedGenre,\r\n      searchQuery,\r\n      movies: allMovies,\r\n    } = this.state;\r\n\r\n    let filtered = allMovies;\r\n    if (searchQuery)\r\n      filtered = allMovies.filter((m) =>\r\n        m.title.toLowerCase().startsWith(searchQuery.toLowerCase())\r\n      );\r\n    else if (selectedGenre && selectedGenre._id)\r\n      filtered = allMovies.filter((m) => m.genre._id === selectedGenre._id);\r\n\r\n    const sorted = _.orderBy(filtered, [sortColumn.col], [sortColumn.order]);\r\n\r\n    const movies = pagination(sorted, currentPage, pageSize);\r\n\r\n    return { totalCount: filtered.length, data: movies };\r\n  };\r\n  render() {\r\n    const { totalCount, data } = this.getPagedData();\r\n    const { user } = this.props;\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-3\">\r\n          <ListGroup\r\n            items={this.state.genres}\r\n            onChange={this.handleChange}\r\n            selectedItem={this.state.selectedGenre}\r\n          />\r\n        </div>\r\n        <div className=\"col\">\r\n          {user && (\r\n            <Link\r\n              to=\"/movies/new\"\r\n              className=\"btn btn-primary\"\r\n              style={{ marginBottom: 20 }}\r\n            >\r\n              New Movie\r\n            </Link>\r\n          )}\r\n          <p>Showing {totalCount} available movies!</p>\r\n          <Searchbox\r\n            value={this.state.SearchQuery}\r\n            onChange={this.handleSearch}\r\n          />\r\n          <MoviesTable\r\n            movies={data}\r\n            sortColumn={this.state.sortColumn}\r\n            onLike={this.handleLike}\r\n            onDelete={this.handleDelete}\r\n            onSort={this.handleSort}\r\n          />\r\n          <Pagination\r\n            count={totalCount}\r\n            pageSize={this.state.pageSize}\r\n            currentPage={this.state.currentPage}\r\n            ChangePage={this.handlePage}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Movies;\r\n","import React from \"react\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\nconst NavBar = ({ user }) => {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n      <Link className=\"navbar-brand\" to=\"\">\r\n        Project\r\n      </Link>\r\n      <button\r\n        className=\"navbar-toggler\"\r\n        type=\"button\"\r\n        data-toggle=\"collapse\"\r\n        data-target=\"#navbarNav\"\r\n        aria-controls=\"navbarNav\"\r\n        aria-expanded=\"false\"\r\n        aria-label=\"Toggle navigation\"\r\n      >\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n        <ul className=\"navbar-nav\">\r\n          <NavLink className=\"nav-item nav-link\" to=\"/movies\">\r\n            Movies\r\n          </NavLink>\r\n          <NavLink className=\"nav-item nav-link\" to=\"/customers\">\r\n            Customers\r\n          </NavLink>\r\n          <NavLink className=\"nav-item nav-link\" to=\"/rentals\">\r\n            Rentals\r\n          </NavLink>\r\n          {!user && (\r\n            <React.Fragment>\r\n              <NavLink className=\"nav-item nav-link\" to=\"/login\">\r\n                Login\r\n              </NavLink>\r\n              <NavLink className=\"nav-item nav-link\" to=\"/register\">\r\n                Register\r\n              </NavLink>\r\n            </React.Fragment>\r\n          )}\r\n          {user && (\r\n            <React.Fragment>\r\n              <NavLink className=\"nav-item nav-link\" to=\"/profile\">\r\n                {user.name}\r\n              </NavLink>\r\n              <NavLink className=\"nav-item nav-link\" to=\"/logout\">\r\n                Logout\r\n              </NavLink>\r\n            </React.Fragment>\r\n          )}\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import React, { Component } from \"react\";\r\nclass Customers extends Component {\r\n  render() {\r\n    return <h2>Customers</h2>;\r\n  }\r\n}\r\n\r\nexport default Customers;\r\n","import React, { Component } from \"react\";\r\nclass Rentals extends Component {\r\n  state = {};\r\n  render() {\r\n    return <h2>Rentals</h2>;\r\n  }\r\n}\r\n\r\nexport default Rentals;\r\n","import React, { Component } from \"react\";\r\nclass Notfound extends Component {\r\n  render() {\r\n    return <h2>Not Found</h2>;\r\n  }\r\n}\r\n\r\nexport default Notfound;\r\n","import React from \"react\";\r\nconst Input = ({ name, label, error, ...rest }) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <input {...rest} name={name} id={name} className=\"form-control\" />\r\n      {error && <div className=\"alert alert-danger\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import React from \"react\";\r\n\r\nconst Select = ({ name, label, options, error, ...rest }) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <select name={name} id={name} {...rest} className=\"form-control\">\r\n        <option value=\"\" />\r\n        {options.map((option) => (\r\n          <option key={option._id} value={option._id}>\r\n            {option.name}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      {error && <div className=\"alert alert-danger\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Select;\r\n","import React, { Component } from \"react\";\r\nimport Joi from \"joi-browser\";\r\nimport Input from \"./input\";\r\nimport Select from \"./select\";\r\n\r\nclass Form extends Component {\r\n  state = {\r\n    data: {},\r\n    errors: {},\r\n  };\r\n\r\n  validate = () => {\r\n    const options = { abortEarly: false };\r\n    const { error } = Joi.validate(this.state.data, this.schema, options);\r\n    if (!error) return null;\r\n\r\n    const errors = {};\r\n    for (let item of error.details) errors[item.path[0]] = item.message;\r\n    return errors;\r\n  };\r\n\r\n  validateProperty = ({ name, value }) => {\r\n    const obj = { [name]: value };\r\n    const schema = { [name]: this.schema[name] };\r\n    const { error } = Joi.validate(obj, schema);\r\n    return error ? error.details[0].message : null;\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const errors = this.validate();\r\n    this.setState({ errors: errors || {} });\r\n    if (errors) return;\r\n\r\n    this.doSubmit();\r\n  };\r\n\r\n  handleChange = ({ currentTarget: input }) => {\r\n    const errors = { ...this.state.errors };\r\n    const errorMessage = this.validateProperty(input);\r\n    if (errorMessage) errors[input.name] = errorMessage;\r\n    else delete errors[input.name];\r\n\r\n    const data = { ...this.state.data };\r\n    data[input.name] = input.value;\r\n\r\n    this.setState({ data, errors });\r\n  };\r\n\r\n  renderButton(label) {\r\n    return (\r\n      <button disabled={this.validate()} className=\"btn btn-primary\">\r\n        {label}\r\n      </button>\r\n    );\r\n  }\r\n\r\n  renderSelect(name, label, options) {\r\n    const { data, errors } = this.state;\r\n\r\n    return (\r\n      <Select\r\n        name={name}\r\n        value={data[name]}\r\n        label={label}\r\n        options={options}\r\n        onChange={this.handleChange}\r\n        error={errors[name]}\r\n      />\r\n    );\r\n  }\r\n\r\n  renderInput(name, label, type = \"text\") {\r\n    const { data, errors } = this.state;\r\n\r\n    return (\r\n      <Input\r\n        type={type}\r\n        name={name}\r\n        value={data[name]}\r\n        label={label}\r\n        onChange={this.handleChange}\r\n        error={errors[name]}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\nimport Joi from \"joi-browser\";\r\nimport Form from \"./common/form\";\r\nimport { getGenres } from \"./../services/genreService\";\r\nimport { getMovie, saveMovie } from \"./../services/movieService\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nclass MovieForm extends Form {\r\n  state = {\r\n    data: {\r\n      title: \"\",\r\n      genreId: \"\",\r\n      numberInStock: \"\",\r\n      dailyRentalRate: \"\",\r\n    },\r\n    genres: [],\r\n    errors: {},\r\n  };\r\n\r\n  schema = {\r\n    _id: Joi.string(),\r\n    title: Joi.string().required().label(\"Title\"),\r\n    genreId: Joi.string().required().label(\"Genre\"),\r\n    numberInStock: Joi.number()\r\n      .required()\r\n      .min(0)\r\n      .max(100)\r\n      .label(\"Number in Stock\"),\r\n    dailyRentalRate: Joi.number()\r\n      .required()\r\n      .min(0)\r\n      .max(10)\r\n      .label(\"Daily Rental Rate\"),\r\n  };\r\n  async componentDidMount() {\r\n    const { data: genresData } = await getGenres();\r\n    this.setState({ genres: genresData });\r\n    const { match } = this.props;\r\n    const id = match.params.id;\r\n    if (id === \"new\") return;\r\n    try {\r\n      const { data: movie } = await getMovie(id);\r\n      const data = {\r\n        _id: movie._id,\r\n        title: movie.title,\r\n        genreId: movie.genre._id,\r\n        numberInStock: movie.numberInStock,\r\n        dailyRentalRate: movie.dailyRentalRate,\r\n      };\r\n      this.setState({ data });\r\n    } catch (ex) {\r\n      toast.error(\"Movie not found!\");\r\n      return this.props.history.replace(\"/not-found\");\r\n    }\r\n  }\r\n  doSubmit = async () => {\r\n    await saveMovie(this.state.data);\r\n    this.props.history.replace(\"/movies\");\r\n  };\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <h2>Movie Form</h2>\r\n        <form onSubmit={this.handleSubmit}>\r\n          {this.renderInput(\"title\", \"Title\")}\r\n          {this.renderSelect(\"genreId\", \"Genre\", this.state.genres)}\r\n          {this.renderInput(\"numberInStock\", \"Number in Stock\")}\r\n          {this.renderInput(\"dailyRentalRate\", \"Rate\")}\r\n          {this.renderButton(\"Save\")}\r\n        </form>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MovieForm;\r\n","import React from \"react\";\r\nimport { login } from \"../services/authService\";\r\nimport Joi from \"joi-browser\";\r\nimport Form from \"./common/form\";\r\nimport { toast } from \"react-toastify\";\r\nimport { getCurrentUser } from \"./../services/authService\";\r\nimport { Redirect } from \"react-router-dom\";\r\nclass LoginForm extends Form {\r\n  state = { data: { username: \"\", password: \"\" }, errors: {} };\r\n  schema = {\r\n    username: Joi.string().required().label(\"Username\"),\r\n    password: Joi.string().required().label(\"Password\"),\r\n  };\r\n\r\n  doSubmit = async () => {\r\n    try {\r\n      const user = this.state.data;\r\n      await login(user);\r\n      const { state } = this.props.location;\r\n      window.location = state ? state.from.pathname : \"/\";\r\n    } catch (ex) {\r\n      toast.error(\"Invalid Username or Password\");\r\n    }\r\n  };\r\n  render() {\r\n    if (getCurrentUser()) return <Redirect to=\"/\" />;\r\n    return (\r\n      <div className=\"conatainer\">\r\n        <h2>Login</h2>\r\n        <form onSubmit={this.handleSubmit}>\r\n          {this.renderInput(\"username\", \"Username\")}\r\n          {this.renderInput(\"password\", \"Password\", \"password\")}\r\n          {this.renderButton(\"Login\")}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoginForm;\r\n","import http from \"./httpService\";\r\nexport function register(user) {\r\n  const body = {\r\n    email: user.username,\r\n    name: user.name,\r\n    password: user.password,\r\n  };\r\n  return http.post(\"/users\", body);\r\n}\r\n","import React from \"react\";\r\nimport Form from \"./common/form\";\r\nimport Joi from \"joi-browser\";\r\nimport { toast } from \"react-toastify\";\r\nimport { register } from \"./../services/userService\";\r\nimport { loginWithJwt } from \"../services/authService\";\r\nclass RegisterForm extends Form {\r\n  state = { data: { username: \"\", password: \"\", name: \"\" }, errors: {} };\r\n  schema = {\r\n    username: Joi.string().required().email().label(\"Username\"),\r\n    password: Joi.string().required().min(5).label(\"Password\"),\r\n    name: Joi.string().required().label(\"Name\"),\r\n  };\r\n  doSubmit = async () => {\r\n    try {\r\n      const response = await register(this.state.data);\r\n      loginWithJwt(response.headers[\"x-auth-token\"]);\r\n      toast.info(\"Account created successfully\");\r\n      window.location = \"/\";\r\n    } catch (ex) {\r\n      toast.error(\"User already exists\");\r\n      this.props.history.replace(\"/login\");\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h2>Register</h2>\r\n        <form onSubmit={this.handleSubmit}>\r\n          {this.renderInput(\"username\", \"Username\")}\r\n          {this.renderInput(\"password\", \"Password\", \"password\")}\r\n          {this.renderInput(\"name\", \"Name\")}\r\n          {this.renderButton(\"Register\")}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RegisterForm;\r\n","import { Component } from \"react\";\r\nimport { logout } from \"../services/authService\";\r\nclass Logout extends Component {\r\n  componentDidMount() {\r\n    logout();\r\n    window.location = \"/\";\r\n  }\r\n  render() {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default Logout;\r\n","import React from \"react\";\r\nimport { getCurrentUser } from \"../../services/authService\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nconst ProtectedRoute = ({ component: Component, render, ...rest }) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) => {\r\n        if (!getCurrentUser())\r\n          return (\r\n            <Redirect\r\n              to={{\r\n                pathname: \"/react-project/login\",\r\n                state: { from: props.location },\r\n              }}\r\n            />\r\n          );\r\n        return Component ? <Component {...props} /> : render(props);\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ProtectedRoute;\r\n","import React, { Component } from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport \"./App.css\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nimport Movies from \"./components/movies\";\nimport NavBar from \"./components/navBar\";\nimport Customers from \"./components/cutomers\";\nimport Rentals from \"./components/rentals\";\nimport Notfound from \"./components/notFound\";\nimport MovieForm from \"./components/movieForm\";\nimport LoginForm from \"./components/loginForm\";\nimport { ToastContainer } from \"react-toastify\";\nimport RegisterForm from \"./components/registerForm\";\nimport Logout from \"./components/logout\";\nimport { getCurrentUser } from \"./services/authService\";\nimport ProtectedRoute from \"./components/common/protectedRoute\";\nclass App extends Component {\n  state = {};\n  componentDidMount() {\n    const user = getCurrentUser();\n    this.setState({ user });\n  }\n  render() {\n    const user = this.state.user;\n    return (\n      <React.Fragment>\n        <ToastContainer />\n        <NavBar user={user} />\n        <main className=\"container\">\n          <Switch>\n            <Route path=\"/login\" component={LoginForm} />\n            <Route path=\"/register\" component={RegisterForm} />\n            <ProtectedRoute path=\"/movies/:id\" component={MovieForm} />\n            <Route\n              path=\"/react-project/movies\"\n              render={(props) => <Movies {...props} user={this.state.user} />}\n            />\n            <Route path=\"/customers\" component={Customers} />\n            <Route path=\"/rentals\" component={Rentals} />\n            <Route path=\"/logout\" component={Logout} />\n            <Route path=\"/not-found\" component={Notfound} />\n            <Redirect from=\"/\" exact to=\"/movies\" />\n            <Redirect to=\"/not-found\" />\n          </Switch>\n        </main>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport \"font-awesome/css/font-awesome.css\";\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}